name: Tests

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-ansi

    - name: Run tests with coverage (Python 3.9 only)
      if: matrix.python-version == '3.9'
      run: |
        poetry run pytest tests/ -v --tb=short --cov=webquiz --cov-report=term-missing --cov-report=xml
      env:
        SKIP_SELENIUM: "false"
        PYTEST_XDIST_WORKER: gw${{ strategy.job-index }}

    - name: Run tests without coverage (Python 3.10+)
      if: matrix.python-version != '3.9'
      run: |
        poetry run python -m pytest tests/ -v --tb=short
      env:
        SKIP_SELENIUM: "true"
        PYTEST_XDIST_WORKER: gw${{ strategy.job-index }}

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
